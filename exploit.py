from subprocess import Popen, PIPE, STDOUT
import os
import sys
import struct
from time import sleep


def read_until(p: Popen, end):
    buf = ""
    while end not in buf:
        p.stdout.flush()
        buf += p.stdout.readline().decode()
    print(buf)


def main():
    p = Popen(
        r"C:\Users\uttervitriol\source\repos\LazyFragmentHeapExp\LazyFragmentationHeap.exe",
        stdin=PIPE,
        stdout=PIPE,
        stderr=PIPE
    )
    read_until(p, ":")
    p.kill()


if __name__ == "__main__":
    main()


'''
if ID == 0; ID = 0xddaa

struct heap
{
0x0     0x00000beefdad0000
0x8     0
0x10    0
0x18    0x04
}

0x00000beefdad0000
0x0     0x0000ddaabeef1acd (after alloc)
0x8     slot one size (after alloc)
0x10    slot one ID (after alloc)
0x18    0x0000ddaabeef1acd (after alloc)
0x20    slot one heap alloc addr

0000015d`f7925840
0000015d`f7927960
0000015d`f7927960
'''
